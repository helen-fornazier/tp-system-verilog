module rtlcDiv_m_rtlsim_uns_div_47_24_24( out_23 ,out_22 ,out_21 ,out_20 ,out_19 ,out_18 ,out_17 ,out_16 ,out_15 ,out_14 ,out_13 ,out_12 ,out_11 ,out_10 ,out_9 ,out_8 ,out_7 ,out_6 ,out_5 ,out_4 ,out_3 ,out_2 ,out_1 ,out_0 ,in1_46 ,in1_45 ,in1_44 ,in1_43 ,in1_42 ,in1_41 ,in1_40 ,in1_39 ,in1_38 ,in1_37 ,in1_36 ,in1_35 ,in1_34 ,in1_33 ,in1_32 ,in1_31 ,in1_30 ,in1_29 ,in1_28 ,in1_27 ,in1_26 ,in1_25 ,in1_24 ,in1_23 ,in1_22 ,in1_21 ,in1_20 ,in1_19 ,in1_18 ,in1_17 ,in1_16 ,in1_15 ,in1_14 ,in1_13 ,in1_12 ,in1_11 ,in1_10 ,in1_9 ,in1_8 ,in1_7 ,in1_6 ,in1_5 ,in1_4 ,in1_3 ,in1_2 ,in1_1 ,in1_0 ,in2_23 ,in2_22 ,in2_21 ,in2_20 ,in2_19 ,in2_18 ,in2_17 ,in2_16 ,in2_15 ,in2_14 ,in2_13 ,in2_12 ,in2_11 ,in2_10 ,in2_9 ,in2_8 ,in2_7 ,in2_6 ,in2_5 ,in2_4 ,in2_3 ,in2_2 ,in2_1 , in2_0 );

output out_23 ;
reg out_23 ;
output out_22 ;
reg out_22 ;
output out_21 ;
reg out_21 ;
output out_20 ;
reg out_20 ;
output out_19 ;
reg out_19 ;
output out_18 ;
reg out_18 ;
output out_17 ;
reg out_17 ;
output out_16 ;
reg out_16 ;
output out_15 ;
reg out_15 ;
output out_14 ;
reg out_14 ;
output out_13 ;
reg out_13 ;
output out_12 ;
reg out_12 ;
output out_11 ;
reg out_11 ;
output out_10 ;
reg out_10 ;
output out_9 ;
reg out_9 ;
output out_8 ;
reg out_8 ;
output out_7 ;
reg out_7 ;
output out_6 ;
reg out_6 ;
output out_5 ;
reg out_5 ;
output out_4 ;
reg out_4 ;
output out_3 ;
reg out_3 ;
output out_2 ;
reg out_2 ;
output out_1 ;
reg out_1 ;
output out_0 ;
reg out_0 ;


input in1_46 ;
input in1_45 ;
input in1_44 ;
input in1_43 ;
input in1_42 ;
input in1_41 ;
input in1_40 ;
input in1_39 ;
input in1_38 ;
input in1_37 ;
input in1_36 ;
input in1_35 ;
input in1_34 ;
input in1_33 ;
input in1_32 ;
input in1_31 ;
input in1_30 ;
input in1_29 ;
input in1_28 ;
input in1_27 ;
input in1_26 ;
input in1_25 ;
input in1_24 ;
input in1_23 ;
input in1_22 ;
input in1_21 ;
input in1_20 ;
input in1_19 ;
input in1_18 ;
input in1_17 ;
input in1_16 ;
input in1_15 ;
input in1_14 ;
input in1_13 ;
input in1_12 ;
input in1_11 ;
input in1_10 ;
input in1_9 ;
input in1_8 ;
input in1_7 ;
input in1_6 ;
input in1_5 ;
input in1_4 ;
input in1_3 ;
input in1_2 ;
input in1_1 ;
input in1_0 ;


input in2_23 ;
input in2_22 ;
input in2_21 ;
input in2_20 ;
input in2_19 ;
input in2_18 ;
input in2_17 ;
input in2_16 ;
input in2_15 ;
input in2_14 ;
input in2_13 ;
input in2_12 ;
input in2_11 ;
input in2_10 ;
input in2_9 ;
input in2_8 ;
input in2_7 ;
input in2_6 ;
input in2_5 ;
input in2_4 ;
input in2_3 ;
input in2_2 ;
input in2_1 ;
input in2_0 ;


reg [23:0] arg_quotient;
wire [23:0] valuein2;
assign valuein2[23:0] = {in2_23 ,in2_22 ,in2_21 ,in2_20 ,in2_19 ,in2_18 ,in2_17 ,in2_16 ,in2_15 ,in2_14 ,in2_13 ,in2_12 ,in2_11 ,in2_10 ,in2_9 ,in2_8 ,in2_7 ,in2_6 ,in2_5 ,in2_4 ,in2_3 ,in2_2 ,in2_1 ,in2_0 };
wire [46:0] valuein1;
assign valuein1[46:0] = { in1_46 ,in1_45 ,in1_44 ,in1_43 ,in1_42 ,in1_41 ,in1_40 ,in1_39 ,in1_38 ,in1_37 ,in1_36 ,in1_35 ,in1_34 ,in1_33 ,in1_32 ,in1_31 ,in1_30 ,in1_29 ,in1_28 ,in1_27 ,in1_26 ,in1_25 ,in1_24 ,in1_23 ,in1_22 ,in1_21 ,in1_20 ,in1_19 ,in1_18 ,in1_17 ,in1_16 ,in1_15 ,in1_14 ,in1_13 ,in1_12 ,in1_11 ,in1_10 ,in1_9 ,in1_8 ,in1_7 ,in1_6 ,in1_5 ,in1_4 ,in1_3 ,in1_2 ,in1_1 ,in1_0 };

function [23:0] quotient;

input [46:0] valuein1;
input [23:0] valuein2;

reg [5:0] i;
reg [5:0] j;
reg [70:0] product;
reg [46:0] diff1;
reg [46:0] diff1_temp1;
reg [46:0] diff1_temp2;
reg [47:0] diff1_temp3;
reg borrow1;
reg borrow2;

begin

quotient = 0;
product = 0;
if ( valuein2 != 0 )
begin
	if( valuein2 == 1 )
		quotient = valuein1;
	else
	begin
	quotient = 0;
	for ( i = 46; i > 23 ; i = i - 1)
	begin
		product = valuein2 << (i - 1);
			{borrow1,diff1} = valuein1 - product[46:0];
			 borrow2        = ~( (~borrow1) & (& (~product[70:47]))  );
		if (borrow2 == 0)
		begin
			quotient = quotient | (1<<(i - 1));
			valuein1 = diff1;
		end
	end
	for ( i = 23; i > 0 ; i = i - 1)
	begin
		product = valuein2 << (i - 1);
		diff1_temp3 = 0;
		diff1_temp1 = 0;
		diff1_temp2 = 0;
		for ( j = 46; j > i+23 ; j = j - 1)
		begin
			valuein1[j] = 0;
		end
		diff1_temp1[i+23] = valuein1[i+23];
		for ( j = i+23; j > 0 ; j = j - 1)
		begin
			diff1_temp1[j-1] = valuein1[j-1];
			diff1_temp2[j-1] = product[j-1];
		end
		diff1_temp3 = diff1_temp1 - diff1_temp2;
		borrow1 = diff1_temp3[i+24];
		borrow2  = borrow1;
		if (borrow2 == 0)
		begin
			quotient = quotient | (1<<(i - 1));
			valuein1 = diff1_temp3[46:0];
		end
	end
	end
end
end
endfunction

always @(valuein1 or valuein2)
begin
arg_quotient = quotient(valuein1, valuein2);
{ out_23 ,out_22 ,out_21 ,out_20 ,out_19 ,out_18 ,out_17 ,out_16 ,out_15 ,out_14 ,out_13 ,out_12 ,out_11 ,out_10 ,out_9 ,out_8 ,out_7 ,out_6 ,out_5 ,out_4 ,out_3 ,out_2 ,out_1 ,out_0 } = arg_quotient[23:0];

end

endmodule